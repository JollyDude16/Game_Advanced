// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "./generated/userDataClient"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL2")
}

// 계정(account), 캐릭터(character), 캐릭터 아이템(equiped item), 아이템(item), 인벤토리(inventory), 상점(shop)

model Account {
  accountId Int @id @default(autoincrement()) @map("accountId")
  email     String @unique @map("email")
  password  String @map("password")
  name String @map("name")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  characters Character[]

  @@map("Accounts")
}

model Character {
  characterId Int @id @default(autoincrement()) @map("characterId")
  accountId   Int @map("accountId")

  name        String @unique @map("name")
  power Int @default(500)
  money Int @default(10000)

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  account Account @relation(fields: [accountId], references: [accountId], onDelete: Cascade)
  
  equippedItems EquippedItem[]
  inventories  Inventory[]

  @@map("Characters")
}

model EquippedItem {
  equippedItemId Int @id @default(autoincrement()) @map("equippedItemId")
  characterId    Int @map("characterId")
  itemId         Int @map("itemId")

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  character Character @relation(fields: [characterId], references: [characterId], onDelete: Cascade)
  item      Item @relation(fields: [itemId], references: [itemId], onDelete: Cascade)

  @@map("EquippedItems")
}

model Item {
  itemId   Int @id @default(autoincrement()) @map("itemId")
  name     String @map("name")
  rarity   String @map("rarity")
  type     String @map("type")

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  equippedItems EquippedItem[]

  @@map("Items")
}

model Inventory {
  inventoryId Int @id @default(autoincrement()) @map("inventoryId")
  characterId Int @map("characterId")
  itemId Int @map("item_id")
  character Character @relation(fields: [characterId], references: [characterId], onDelete: Cascade)

  @@map("Inventories")
}